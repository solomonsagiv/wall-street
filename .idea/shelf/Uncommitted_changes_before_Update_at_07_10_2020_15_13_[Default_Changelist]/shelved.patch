Index: src/main/java/exp/E.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package exp;\r\n\r\nimport charts.myChart.MyTimeSeries;\r\nimport delta.DeltaCalc;\r\nimport myJson.MyJson;\r\nimport options.JsonStrings;\r\nimport options.OptionsDDeCells;\r\nimport options.optionsCalcs.IOptionsCalcs;\r\nimport serverObjects.BASE_CLIENT_OBJECT;\r\nimport tws.TwsContractsEnum;\r\n\r\nimport java.net.UnknownHostException;\r\n\r\npublic class E extends Exp {\r\n\r\n    protected int delta = 0;\r\n    protected int volumeFutForDelta = 0;\r\n    protected double futForDelta = 0;\r\n    protected double futBidForDelta = 0;\r\n    protected double futAskForDelta = 0;\r\n    protected double preFutBidForDelta = 0;\r\n    private double preFutAskForDelta = 0;\r\n    private MyTimeSeries deltaSerie;\r\n\r\n    public E(BASE_CLIENT_OBJECT client, String expEnum, TwsContractsEnum contractsEnum, IOptionsCalcs iOptionsCalcs) {\r\n        super(client, expEnum, contractsEnum, iOptionsCalcs);\r\n        initSeries();\r\n    }\r\n\r\n    public E(BASE_CLIENT_OBJECT client, String expEnum, TwsContractsEnum twsContractsEnum, IOptionsCalcs iOptionsCalcs, OptionsDDeCells optionsDDeCells) {\r\n        super(client, expEnum, twsContractsEnum, iOptionsCalcs, optionsDDeCells);\r\n        initSeries();\r\n    }\r\n\r\n    public int getDelta() {\r\n        return delta;\r\n    }\r\n\r\n    public void setDelta(int delta) {\r\n        this.delta = delta;\r\n    }\r\n\r\n    public int getVolumeFutForDelta() {\r\n        return volumeFutForDelta;\r\n    }\r\n\r\n    public void setVolumeFutForDelta(int volumeFutForDelta) {\r\n        int quantity = volumeFutForDelta - this.volumeFutForDelta;\r\n        this.delta += DeltaCalc.calc(quantity, getFutForDelta(), getPreFutBidForDelta(), getPreFutAskForDelta());\r\n        this.volumeFutForDelta = volumeFutForDelta;\r\n        System.out.println(delta + \" \" + getName());\r\n    }\r\n\r\n    public void initSeries() {\r\n        super.initSeries();\r\n        deltaSerie = new MyTimeSeries(\"Delta\", client) {\r\n            @Override\r\n            public double getData() throws UnknownHostException {\r\n                return delta;\r\n            }\r\n        };\r\n    }\r\n\r\n    @Override\r\n    public MyJson getAsJson() {\r\n        MyJson json = super.getAsJson();\r\n        json.put(JsonStrings.delta, getDelta());\r\n        return super.getAsJson();\r\n    }\r\n\r\n    @Override\r\n    public void loadFromJson(MyJson json) {\r\n        setDelta(json.getInt(JsonStrings.delta));\r\n        super.loadFromJson(json);\r\n    }\r\n\r\n    public double getFutBidForDelta() {\r\n        return futBidForDelta;\r\n    }\r\n\r\n    public void setFutBidForDelta(double futBidForDelta) {\r\n        this.preFutBidForDelta = getFutBidForDelta();\r\n        this.futBidForDelta = futBidForDelta;\r\n    }\r\n\r\n    public MyTimeSeries getDeltaSerie() {\r\n        return deltaSerie;\r\n    }\r\n\r\n    public double getFutAskForDelta() {\r\n        return futAskForDelta;\r\n    }\r\n\r\n    public void setFutAskForDelta(double futAskForDelta) {\r\n        this.preFutAskForDelta = getFutAskForDelta();\r\n        this.futAskForDelta = futAskForDelta;\r\n    }\r\n\r\n    public double getPreFutBidForDelta() {\r\n        return preFutBidForDelta;\r\n    }\r\n\r\n    public double getPreFutAskForDelta() {\r\n        return preFutAskForDelta;\r\n    }\r\n\r\n    public double getFutForDelta() {\r\n        return futForDelta;\r\n    }\r\n\r\n    public void setFutForDelta(double futForDelta) {\r\n        this.futForDelta = futForDelta;\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/exp/E.java	(revision a56979f66262aed27c422c3be91a188ed14099da)
+++ src/main/java/exp/E.java	(date 1602072785951)
@@ -2,8 +2,6 @@
 
 import charts.myChart.MyTimeSeries;
 import delta.DeltaCalc;
-import myJson.MyJson;
-import options.JsonStrings;
 import options.OptionsDDeCells;
 import options.optionsCalcs.IOptionsCalcs;
 import serverObjects.BASE_CLIENT_OBJECT;
@@ -22,13 +20,13 @@
     private double preFutAskForDelta = 0;
     private MyTimeSeries deltaSerie;
 
-    public E(BASE_CLIENT_OBJECT client, String expEnum, TwsContractsEnum contractsEnum, IOptionsCalcs iOptionsCalcs) {
-        super(client, expEnum, contractsEnum, iOptionsCalcs);
+    public E( BASE_CLIENT_OBJECT client, String expEnum, TwsContractsEnum contractsEnum, IOptionsCalcs iOptionsCalcs ) {
+        super( client, expEnum, contractsEnum, iOptionsCalcs );
         initSeries();
     }
 
-    public E(BASE_CLIENT_OBJECT client, String expEnum, TwsContractsEnum twsContractsEnum, IOptionsCalcs iOptionsCalcs, OptionsDDeCells optionsDDeCells) {
-        super(client, expEnum, twsContractsEnum, iOptionsCalcs, optionsDDeCells);
+    public E( BASE_CLIENT_OBJECT client, String expEnum, TwsContractsEnum twsContractsEnum, IOptionsCalcs iOptionsCalcs, OptionsDDeCells optionsDDeCells ) {
+        super( client, expEnum, twsContractsEnum, iOptionsCalcs, optionsDDeCells );
         initSeries();
     }
 
@@ -36,7 +34,7 @@
         return delta;
     }
 
-    public void setDelta(int delta) {
+    public void setDelta( int delta ) {
         this.delta = delta;
     }
 
@@ -44,11 +42,11 @@
         return volumeFutForDelta;
     }
 
-    public void setVolumeFutForDelta(int volumeFutForDelta) {
+    public void setVolumeFutForDelta( int volumeFutForDelta ) {
         int quantity = volumeFutForDelta - this.volumeFutForDelta;
         this.delta += DeltaCalc.calc(quantity, getFutForDelta(), getPreFutBidForDelta(), getPreFutAskForDelta());
         this.volumeFutForDelta = volumeFutForDelta;
-        System.out.println(delta + " " + getName());
+        System.out.println( delta + " " + getName() );
     }
 
     public void initSeries() {
@@ -61,25 +59,15 @@
         };
     }
 
-    @Override
-    public MyJson getAsJson() {
-        MyJson json = super.getAsJson();
-        json.put(JsonStrings.delta, getDelta());
-        return super.getAsJson();
-    }
 
-    @Override
-    public void loadFromJson(MyJson json) {
-        setDelta(json.getInt(JsonStrings.delta));
-        super.loadFromJson(json);
-    }
+
 
     public double getFutBidForDelta() {
         return futBidForDelta;
     }
 
-    public void setFutBidForDelta(double futBidForDelta) {
-        this.preFutBidForDelta = getFutBidForDelta();
+    public void setFutBidForDelta( double futBidForDelta ) {
+        this.preFutBidForDelta = getFutBidForDelta( );
         this.futBidForDelta = futBidForDelta;
     }
 
@@ -91,8 +79,8 @@
         return futAskForDelta;
     }
 
-    public void setFutAskForDelta(double futAskForDelta) {
-        this.preFutAskForDelta = getFutAskForDelta();
+    public void setFutAskForDelta( double futAskForDelta ) {
+        this.preFutAskForDelta = getFutAskForDelta( );
         this.futAskForDelta = futAskForDelta;
     }
 
@@ -108,7 +96,7 @@
         return futForDelta;
     }
 
-    public void setFutForDelta(double futForDelta) {
+    public void setFutForDelta( double futForDelta ) {
         this.futForDelta = futForDelta;
     }
 }
\ No newline at end of file
Index: src/main/java/charts/myCharts/FullCharts.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package charts.myCharts;\r\n\r\nimport charts.myChart.*;\r\nimport exp.Exp;\r\nimport exp.ExpStrings;\r\nimport locals.Themes;\r\nimport org.jfree.chart.plot.ValueMarker;\r\nimport serverObjects.BASE_CLIENT_OBJECT;\r\n\r\nimport java.awt.*;\r\n\r\npublic class FullCharts extends MyChartCreator {\r\n\r\n    // Constructor\r\n    public FullCharts( BASE_CLIENT_OBJECT client) {\r\n        super(client);\r\n    }\r\n\r\n    @Override\r\n    public void createChart() throws CloneNotSupportedException {\r\n\r\n        MyTimeSeries[] series;\r\n\r\n        // Props\r\n        props = new MyProps();\r\n        props.setProp(ChartPropsEnum.SECONDS, INFINITE);\r\n        props.setProp(ChartPropsEnum.IS_INCLUDE_TICKER, false);\r\n        props.setProp(ChartPropsEnum.MARGIN, 0.005);\r\n        props.setProp(ChartPropsEnum.RANGE_MARGIN, 0.0);\r\n        props.setProp(ChartPropsEnum.IS_GRID_VISIBLE, true);\r\n        props.setProp(ChartPropsEnum.IS_LOAD_DB, true);\r\n        props.setProp(ChartPropsEnum.IS_LIVE, false);\r\n        props.setProp(ChartPropsEnum.SLEEP, 1000);\r\n        props.setProp(ChartPropsEnum.CHART_MAX_HEIGHT_IN_DOTS, INFINITE);\r\n        props.setProp(ChartPropsEnum.SECONDS_ON_MESS, INFINITE);\r\n        props.setProp(ChartPropsEnum.INCLUDE_DOMAIN_AXIS, true);\r\n\r\n        // Marker\r\n        ValueMarker marker = new ValueMarker(0);\r\n        marker.setPaint(Color.BLACK);\r\n        marker.setStroke(new BasicStroke(2f));\r\n\r\n        Exp e1 = client.getExps().getExp(ExpStrings.e1);\r\n\r\n        // --------- OpAvgFuture 15 ---------- //\r\n        MyProps opAvgFutureProps = (MyProps) props.clone();\r\n        opAvgFutureProps.setProp(ChartPropsEnum.MARKER, marker);\r\n        opAvgFutureProps.setProp(ChartPropsEnum.INCLUDE_DOMAIN_AXIS, false);\r\n\r\n\r\n        // Index\r\n        MyTimeSeries opAvgFuture15 = e1.getOpAvg15FutSeries();\r\n        opAvgFuture15.setColor(Themes.PURPLE);\r\n        opAvgFuture15.setStokeSize(1.5f);\r\n\r\n        series = new MyTimeSeries[1];\r\n        series[0] = opAvgFuture15;\r\n\r\n        // Chart\r\n        MyChart opAvgFuture15Chart = new MyChart(client, series, opAvgFutureProps);\r\n\r\n        // --------- OpAvgFuture ---------- //\r\n        // Index\r\n        MyTimeSeries opAvgFuture = e1.getOpAvgFutSeries();\r\n        opAvgFuture.setColor(Themes.PURPLE);\r\n        opAvgFuture.setStokeSize(1.5f);\r\n\r\n        series = new MyTimeSeries[1];\r\n        series[0] = opAvgFuture;\r\n\r\n        // Chart\r\n        MyChart opAvgFutureChart = new MyChart(client, series, opAvgFutureProps);\r\n\r\n\r\n        // --------- Index Bid Ask Counter ---------- //\r\n        // Index\r\n        MyTimeSeries indexBidAskCounterSeries = client.getIndexBidAskCounterSeries();\r\n        indexBidAskCounterSeries.setColor(Color.BLACK);\r\n        indexBidAskCounterSeries.setStokeSize(1.5f);\r\n\r\n        series = new MyTimeSeries[1];\r\n        series[0] = indexBidAskCounterSeries;\r\n\r\n        // Chart\r\n        MyChart indexBidAskCounterChart = new MyChart(client, series, props);\r\n\r\n        // --------- Index 2 ---------- //\r\n        MyProps newProps = (MyProps) props.clone();\r\n        newProps.setProp(ChartPropsEnum.INCLUDE_DOMAIN_AXIS, false);\r\n\r\n        // Index\r\n        MyTimeSeries indexSeries = client.getIndexSeries();\r\n        indexSeries.setColor(Color.BLACK);\r\n        indexSeries.setStokeSize(1.5f);\r\n\r\n        series = new MyTimeSeries[1];\r\n        series[0] = indexSeries;\r\n\r\n        // Chart\r\n        MyChart indexChart = new MyChart(client, series, newProps);\r\n        // -------------------- Chart -------------------- //\r\n\r\n        // ----- Charts ----- //\r\n        MyChart[] charts = {indexChart, opAvgFutureChart, opAvgFuture15Chart, indexBidAskCounterChart};\r\n\r\n        // ----- Container ----- //\r\n        MyChartContainer chartContainer = new MyChartContainer(client, charts, getClass().getName());\r\n        chartContainer.create();\r\n\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/charts/myCharts/FullCharts.java	(revision a56979f66262aed27c422c3be91a188ed14099da)
+++ src/main/java/charts/myCharts/FullCharts.java	(date 1602071639944)
@@ -1,6 +1,7 @@
 package charts.myCharts;
 
 import charts.myChart.*;
+import exp.E;
 import exp.Exp;
 import exp.ExpStrings;
 import locals.Themes;
@@ -42,6 +43,7 @@
 
         Exp e1 = client.getExps().getExp(ExpStrings.e1);
 
+
         // --------- OpAvgFuture 15 ---------- //
         MyProps opAvgFutureProps = (MyProps) props.clone();
         opAvgFutureProps.setProp(ChartPropsEnum.MARKER, marker);
@@ -59,10 +61,22 @@
         // Chart
         MyChart opAvgFuture15Chart = new MyChart(client, series, opAvgFutureProps);
 
+        // --------- Delta ---------- //
+        // Index
+        MyTimeSeries deltaSerie = ((E)e1).getDeltaSerie();
+        deltaSerie.setColor(Themes.GREEN);
+        deltaSerie.setStokeSize(1.5f);
+
+        series = new MyTimeSeries[1];
+        series[0] = deltaSerie;
+
+        // Chart
+        MyChart deltaChart = new MyChart(client, series, opAvgFutureProps);
+
         // --------- OpAvgFuture ---------- //
         // Index
         MyTimeSeries opAvgFuture = e1.getOpAvgFutSeries();
-        opAvgFuture.setColor(Themes.PURPLE);
+        opAvgFuture.setColor(Themes.BLUE);
         opAvgFuture.setStokeSize(1.5f);
 
         series = new MyTimeSeries[1];
@@ -71,11 +85,10 @@
         // Chart
         MyChart opAvgFutureChart = new MyChart(client, series, opAvgFutureProps);
 
-
         // --------- Index Bid Ask Counter ---------- //
         // Index
         MyTimeSeries indexBidAskCounterSeries = client.getIndexBidAskCounterSeries();
-        indexBidAskCounterSeries.setColor(Color.BLACK);
+        indexBidAskCounterSeries.setColor(Color.ORANGE);
         indexBidAskCounterSeries.setStokeSize(1.5f);
 
         series = new MyTimeSeries[1];
@@ -101,7 +114,7 @@
         // -------------------- Chart -------------------- //
 
         // ----- Charts ----- //
-        MyChart[] charts = {indexChart, opAvgFutureChart, opAvgFuture15Chart, indexBidAskCounterChart};
+        MyChart[] charts = {indexChart, deltaChart, opAvgFutureChart, opAvgFuture15Chart, indexBidAskCounterChart};
 
         // ----- Container ----- //
         MyChartContainer chartContainer = new MyChartContainer(client, charts, getClass().getName());
Index: src/main/java/serverObjects/indexObjects/Spx.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package serverObjects.indexObjects;\r\n\r\nimport DDE.DDECells;\r\nimport DDE.DDECellsEnum;\r\nimport api.tws.requesters.SpxRequester;\r\nimport charts.myCharts.FourLineChart;\r\nimport charts.myCharts.OpAvg15Future_E2_IndexCounter_Index_Chart;\r\nimport charts.myCharts.OpAvgFuture_E2_IndexCounter_Index_Chart;\r\nimport dataBase.mySql.mySqlComps.TablesEnum;\r\nimport dataBase.mySql.myTables.index.IndexStocksTable;\r\nimport exp.E;\r\nimport exp.ExpStrings;\r\nimport exp.Exps;\r\nimport logic.LogicService;\r\nimport options.OptionsDDeCells;\r\nimport options.optionsCalcs.IndexOptionsCalc;\r\nimport roll.Roll;\r\nimport roll.RollEnum;\r\nimport roll.RollHandler;\r\nimport roll.RollPriceEnum;\r\nimport serverObjects.ApiEnum;\r\nimport tws.TwsContractsEnum;\r\n\r\nimport java.time.LocalTime;\r\n\r\npublic class Spx extends INDEX_CLIENT_OBJECT {\r\n\r\n    static Spx client = null;\r\n\r\n    // Constructor\r\n    public Spx() {\r\n        setName( \"spx\" );\r\n        setIndexBidAskMargin( .5 );\r\n        setDbId( 2 );\r\n        setStrikeMargin( 5 );\r\n        setBaseId( 10000 );\r\n        initDDECells( );\r\n        setIndexStartTime( LocalTime.of( 16, 31, 0 ) );\r\n        setIndexEndTime( LocalTime.of( 23, 0, 0 ) );\r\n        setFutureEndTime( LocalTime.of( 23, 15, 0 ) );\r\n        setiTwsRequester( new SpxRequester( ) );\r\n        setLogicService( new LogicService( this, ExpStrings.e1 ) );\r\n        roll( );\r\n        myTableHandler( );\r\n    }\r\n\r\n    // Get instance\r\n    public static Spx getInstance() {\r\n        if ( client == null ) {\r\n            client = new Spx( );\r\n        }\r\n        return client;\r\n    }\r\n\r\n    private void myTableHandler() {\r\n        tablesHandler.addTable( TablesEnum.INDEX_STOCKS, new IndexStocksTable( this ) );\r\n    }\r\n\r\n    private void roll() {\r\n        rollHandler = new RollHandler( this );\r\n\r\n        Roll quarter_quarterFar = new Roll( this, ExpStrings.e1, ExpStrings.e2, RollPriceEnum.FUTURE );\r\n        rollHandler.addRoll( RollEnum.E1_E2, quarter_quarterFar );\r\n    }\r\n\r\n    @Override\r\n    public void initExpHandler() throws NullPointerException {\r\n\r\n        // E1\r\n        OptionsDDeCells e1DDeCells = new OptionsDDeCells( \"R19C2\", \"R19C1\", \"R19C3\" );\r\n        E e = new E( this, ExpStrings.e1, TwsContractsEnum.FUTURE, new IndexOptionsCalc( this, ExpStrings.e1 ), e1DDeCells );\r\n\r\n        // E2\r\n        OptionsDDeCells e2DDeCells = new OptionsDDeCells( \"R21C2\", \"R21C1\", \"R21C3\" );\r\n        E e2 = new E( this, ExpStrings.e2, TwsContractsEnum.FUTURE_FAR, new IndexOptionsCalc( this, ExpStrings.e2 ), e2DDeCells );\r\n\r\n        // Add to\r\n        Exps exps = new Exps( this );\r\n        exps.addExp( e, ExpStrings.e1 );\r\n        exps.addExp( e2, ExpStrings.e2 );\r\n        exps.setMainExp( e );\r\n        setExps( exps );\r\n    }\r\n\r\n    @Override\r\n    public void initDDECells() {\r\n        DDECells ddeCells = new DDECells( ) {\r\n            @Override\r\n            public boolean isWorkWithDDE() {\r\n                return true;\r\n            }\r\n        };\r\n\r\n        // Ind\r\n        ddeCells.addCell( DDECellsEnum.IND_BID, \"R2C2\" );\r\n        ddeCells.addCell( DDECellsEnum.IND, \"R2C3\" );\r\n        ddeCells.addCell( DDECellsEnum.IND_ASK, \"R2C4\" );\r\n        ddeCells.addCell( DDECellsEnum.INDEX_MOVE_15, \"R3C1\" );\r\n\r\n        ddeCells.addCell( DDECellsEnum.OPEN, \"R10C4\" );\r\n        ddeCells.addCell( DDECellsEnum.HIGH, \"R10C1\" );\r\n        ddeCells.addCell( DDECellsEnum.LOW, \"R10C2\" );\r\n        ddeCells.addCell( DDECellsEnum.BASE, \"R8C5\" );\r\n\r\n        setDdeCells( ddeCells );\r\n    }\r\n\r\n    @Override\r\n    public void setIndexBid( double indexBid ) {\r\n        super.setIndexBid( indexBid );\r\n\r\n        // Margin counter\r\n        double bidMargin = index - indexBid;\r\n        double askMargin = getIndexAsk() - index;\r\n        double marginOfMarings = askMargin - bidMargin;\r\n\r\n        if ( marginOfMarings > 0 ) {\r\n            indBidMarginCounter += marginOfMarings;\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void setIndexAsk( double indexAsk ) {\r\n        super.setIndexAsk( indexAsk );\r\n        // Margin counter\r\n        double bidMargin = index - getIndexBid();\r\n        double askMargin = indexAsk - index;\r\n        double marginOfMarings = bidMargin - askMargin;\r\n\r\n        if ( marginOfMarings > 0 && marginOfMarings < 5 ) {\r\n            indAskMarginCounter += marginOfMarings;\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void setIndex( double index ) {\r\n        super.setIndex( index );\r\n    }\r\n\r\n    @Override\r\n    public ApiEnum getApi() {\r\n        return ApiEnum.DDE;\r\n    }\r\n\r\n    @Override\r\n    public void initBaseId() {\r\n        setBaseId( 10000 );\r\n    }\r\n\r\n    @Override\r\n    public void openChartsOnStart() {\r\n\r\n        FourLineChart chart = new FourLineChart( client );\r\n        chart.createChart( );\r\n\r\n        OpAvgFuture_E2_IndexCounter_Index_Chart chart2 = new OpAvgFuture_E2_IndexCounter_Index_Chart( client );\r\n        try {\r\n            chart2.createChart( );\r\n        } catch ( CloneNotSupportedException cloneNotSupportedException ) {\r\n            cloneNotSupportedException.printStackTrace( );\r\n        }\r\n\r\n        OpAvg15Future_E2_IndexCounter_Index_Chart chart3 = new OpAvg15Future_E2_IndexCounter_Index_Chart( client );\r\n        try {\r\n            chart3.createChart( );\r\n        } catch ( CloneNotSupportedException cloneNotSupportedException ) {\r\n            cloneNotSupportedException.printStackTrace( );\r\n        }\r\n\r\n    }\r\n\r\n    @Override\r\n    public double getTheoAvgMargin() {\r\n        return 0.05;\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/serverObjects/indexObjects/Spx.java	(revision a56979f66262aed27c422c3be91a188ed14099da)
+++ src/main/java/serverObjects/indexObjects/Spx.java	(date 1602071639949)
@@ -2,10 +2,10 @@
 
 import DDE.DDECells;
 import DDE.DDECellsEnum;
+import api.Manifest;
 import api.tws.requesters.SpxRequester;
 import charts.myCharts.FourLineChart;
-import charts.myCharts.OpAvg15Future_E2_IndexCounter_Index_Chart;
-import charts.myCharts.OpAvgFuture_E2_IndexCounter_Index_Chart;
+import charts.myCharts.FullCharts;
 import dataBase.mySql.mySqlComps.TablesEnum;
 import dataBase.mySql.myTables.index.IndexStocksTable;
 import exp.E;
@@ -25,6 +25,11 @@
 
 public class Spx extends INDEX_CLIENT_OBJECT {
 
+
+    public static void main( String[] args ) {
+        System.out.println( Spx.getInstance().getAsJson().toString( 4 ) );
+    }
+
     static Spx client = null;
 
     // Constructor
@@ -111,7 +116,7 @@
 
         // Margin counter
         double bidMargin = index - indexBid;
-        double askMargin = getIndexAsk() - index;
+        double askMargin = getIndexAsk( ) - index;
         double marginOfMarings = askMargin - bidMargin;
 
         if ( marginOfMarings > 0 ) {
@@ -123,7 +128,7 @@
     public void setIndexAsk( double indexAsk ) {
         super.setIndexAsk( indexAsk );
         // Margin counter
-        double bidMargin = index - getIndexBid();
+        double bidMargin = index - getIndexBid( );
         double askMargin = indexAsk - index;
         double marginOfMarings = bidMargin - askMargin;
 
@@ -150,23 +155,18 @@
     @Override
     public void openChartsOnStart() {
 
-        FourLineChart chart = new FourLineChart( client );
-        chart.createChart( );
+        if ( Manifest.OPEN_CHARTS ) {
+            
+            FourLineChart chart = new FourLineChart( client );
+            chart.createChart( );
 
-        OpAvgFuture_E2_IndexCounter_Index_Chart chart2 = new OpAvgFuture_E2_IndexCounter_Index_Chart( client );
-        try {
-            chart2.createChart( );
-        } catch ( CloneNotSupportedException cloneNotSupportedException ) {
-            cloneNotSupportedException.printStackTrace( );
-        }
-
-        OpAvg15Future_E2_IndexCounter_Index_Chart chart3 = new OpAvg15Future_E2_IndexCounter_Index_Chart( client );
-        try {
-            chart3.createChart( );
-        } catch ( CloneNotSupportedException cloneNotSupportedException ) {
-            cloneNotSupportedException.printStackTrace( );
+            FullCharts fullCharts = new FullCharts( client );
+            try {
+                fullCharts.createChart( );
+            } catch ( CloneNotSupportedException e ) {
+                e.printStackTrace( );
+            }
         }
-
     }
 
     @Override
Index: src/main/java/lists/ListsService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package lists;\r\n\r\nimport exp.E;\r\nimport exp.Exp;\r\nimport options.Options;\r\nimport roll.Roll;\r\nimport roll.RollEnum;\r\nimport serverObjects.BASE_CLIENT_OBJECT;\r\nimport service.MyBaseService;\r\nimport service.ServiceEnum;\r\n\r\nimport java.time.LocalDateTime;\r\nimport java.util.Map;\r\n\r\n// Regular list updater\r\npublic class ListsService extends MyBaseService {\r\n\r\n    // Variables\r\n    BASE_CLIENT_OBJECT client;\r\n\r\n    // Constructor\r\n    public ListsService(BASE_CLIENT_OBJECT client) {\r\n        super(client);\r\n        this.client = client;\r\n    }\r\n\r\n    @Override\r\n    public void go() {\r\n        insert();\r\n    }\r\n\r\n    @Override\r\n    public String getName() {\r\n        return \"lists\";\r\n    }\r\n\r\n    @Override\r\n    public int getSleep() {\r\n        return 1000;\r\n    }\r\n\r\n    @Override\r\n    public ServiceEnum getType() {\r\n        return ServiceEnum.REGULAR_LISTS;\r\n    }\r\n\r\n    private void insert() {\r\n\r\n        LocalDateTime time = LocalDateTime.now();\r\n\r\n        // List for charts\r\n        client.getIndexBidSeries().add(time);\r\n        client.getIndexAskSeries().add(time);\r\n        client.getIndexBidAskCounterSeries().add(time);\r\n        client.getIndexSeries().add(time);\r\n        client.getIndBIdAskMarginSeries().add(time);\r\n\r\n        // Options lists\r\n        for (Exp exp : client.getExps().getExpList()) {\r\n            try {\r\n                exp.getFutList().add(exp.getCalcFut());\r\n                exp.getOpFutList().add(exp.getOpFuture());\r\n\r\n                // E\r\n                if (exp instanceof E) {\r\n                        ((E)exp).getDeltaSerie().add(time);\r\n                }\r\n\r\n                try {\r\n                    exp.getOpAvgFutSeries().add(time);\r\n                    exp.getOpAvg15FutSeries().add(time);\r\n                } catch (Exception e) {\r\n                    System.out.println(getClient().getName() + \" OpAvgFutureList is empty\");\r\n                }\r\n            } catch (NullPointerException e) {\r\n                e.printStackTrace();\r\n            }\r\n\r\n            Options options = exp.getOptions();\r\n            options.getOpList().add(options.getOp());\r\n            options.getOpAvgList().add(options.getOpAvg());\r\n            options.getConList().add(options.getContract());\r\n            options.getConBidList().add(options.getContractBid());\r\n            options.getConAskList().add(options.getContractAsk());\r\n            exp.getFutBidAskCounterSeries().add(time);\r\n            options.getConBidAskCounterSeries().add(time);\r\n        }\r\n\r\n        // Roll lists\r\n        try {\r\n            for (Map.Entry<RollEnum, Roll> entry : getClient().getRollHandler().getRollMap().entrySet()) {\r\n                Roll roll = entry.getValue();\r\n                roll.addRoll();\r\n            }\r\n        } catch (NullPointerException e) {\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/lists/ListsService.java	(revision a56979f66262aed27c422c3be91a188ed14099da)
+++ src/main/java/lists/ListsService.java	(date 1602071639954)
@@ -19,14 +19,14 @@
     BASE_CLIENT_OBJECT client;
 
     // Constructor
-    public ListsService(BASE_CLIENT_OBJECT client) {
-        super(client);
+    public ListsService( BASE_CLIENT_OBJECT client ) {
+        super( client );
         this.client = client;
     }
 
     @Override
     public void go() {
-        insert();
+        insert( );
     }
 
     @Override
@@ -46,53 +46,53 @@
 
     private void insert() {
 
-        LocalDateTime time = LocalDateTime.now();
+        LocalDateTime time = LocalDateTime.now( );
 
         // List for charts
-        client.getIndexBidSeries().add(time);
-        client.getIndexAskSeries().add(time);
-        client.getIndexBidAskCounterSeries().add(time);
-        client.getIndexSeries().add(time);
-        client.getIndBIdAskMarginSeries().add(time);
+        client.getIndexBidSeries( ).add( time );
+        client.getIndexAskSeries( ).add( time );
+        client.getIndexBidAskCounterSeries( ).add( time );
+        client.getIndexSeries( ).add( time );
+        client.getIndBIdAskMarginSeries( ).add( time );
 
         // Options lists
-        for (Exp exp : client.getExps().getExpList()) {
+        for ( Exp exp : client.getExps( ).getExpList( ) ) {
             try {
-                exp.getFutList().add(exp.getCalcFut());
-                exp.getOpFutList().add(exp.getOpFuture());
+                exp.getFutList( ).add( exp.getCalcFut( ) );
+                exp.getOpFutList( ).add( exp.getOpFuture( ) );
 
                 // E
-                if (exp instanceof E) {
-                        ((E)exp).getDeltaSerie().add(time);
+                if ( exp instanceof E ) {
+                    ( ( E ) exp ).getDeltaSerie( ).add( time );
                 }
 
                 try {
-                    exp.getOpAvgFutSeries().add(time);
-                    exp.getOpAvg15FutSeries().add(time);
-                } catch (Exception e) {
-                    System.out.println(getClient().getName() + " OpAvgFutureList is empty");
+                    exp.getOpAvgFutSeries( ).add( time );
+                    exp.getOpAvg15FutSeries( ).add( time );
+                } catch ( Exception e ) {
+                    System.out.println( getClient( ).getName( ) + " OpAvgFutureList is empty" );
                 }
-            } catch (NullPointerException e) {
-                e.printStackTrace();
+            } catch ( NullPointerException e ) {
+                e.printStackTrace( );
             }
 
-            Options options = exp.getOptions();
-            options.getOpList().add(options.getOp());
-            options.getOpAvgList().add(options.getOpAvg());
-            options.getConList().add(options.getContract());
-            options.getConBidList().add(options.getContractBid());
-            options.getConAskList().add(options.getContractAsk());
-            exp.getFutBidAskCounterSeries().add(time);
-            options.getConBidAskCounterSeries().add(time);
+            Options options = exp.getOptions( );
+            options.getOpList( ).add( options.getOp( ) );
+            options.getOpAvgList( ).add( options.getOpAvg( ) );
+            options.getConList( ).add( options.getContract( ) );
+            options.getConBidList( ).add( options.getContractBid( ) );
+            options.getConAskList( ).add( options.getContractAsk( ) );
+            exp.getFutBidAskCounterSeries( ).add( time );
+            options.getConBidAskCounterSeries( ).add( time );
         }
 
         // Roll lists
         try {
-            for (Map.Entry<RollEnum, Roll> entry : getClient().getRollHandler().getRollMap().entrySet()) {
-                Roll roll = entry.getValue();
-                roll.addRoll();
+            for ( Map.Entry< RollEnum, Roll > entry : getClient( ).getRollHandler( ).getRollMap( ).entrySet( ) ) {
+                Roll roll = entry.getValue( );
+                roll.addRoll( );
             }
-        } catch (NullPointerException e) {
+        } catch ( NullPointerException e ) {
         }
     }
 }
\ No newline at end of file
Index: src/main/java/api/Manifest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package api;\r\n\r\npublic class Manifest {\r\n\r\n    // REAL ACCOUNT\r\n    public static int REAL_PORT = 7777;\r\n    public static int CLIENT_ID = 98;\r\n    public static String REAL_ACCOUNT = \"U2177653\";\r\n\r\n    // SNUPPI ACCOUNT\r\n    public static int SNUPPI_PORT = 7496;\r\n    public static String SNUPPI_ACCOUNT = \"U3450352\";\r\n\r\n    // TEST ACCOUNT\r\n    public static String TEST_ACCOUNT = \"DU1293791\";\r\n    public static int TEST_PORT = 3333;\r\n\r\n    // SELECTED ACCOUNT\r\n    public static boolean DB = false;\r\n    public static boolean DB_RUNNER = false;\r\n    public static boolean DB_UPDATER = false;\r\n    public static String ACCOUNT = REAL_ACCOUNT;\r\n    public static int PORT = REAL_PORT;\r\n    public static int SCREEN = 0;\r\n\r\n    // FUTURES\r\n    public static String EXPIRY = \"202006\";\r\n\r\n    // DB\r\n    public static String EXP = \"JUN\";\r\n\r\n    /*\r\n     * On expiration change\r\n     * 1. EXPIRY date\r\n     * 2. EXP name\r\n     * */\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/api/Manifest.java	(revision a56979f66262aed27c422c3be91a188ed14099da)
+++ src/main/java/api/Manifest.java	(date 1602071639960)
@@ -2,6 +2,7 @@
 
 public class Manifest {
 
+
     // REAL ACCOUNT
     public static int REAL_PORT = 7777;
     public static int CLIENT_ID = 98;
@@ -19,6 +20,7 @@
     public static boolean DB = false;
     public static boolean DB_RUNNER = false;
     public static boolean DB_UPDATER = false;
+    public static final boolean OPEN_CHARTS = false;
     public static String ACCOUNT = REAL_ACCOUNT;
     public static int PORT = REAL_PORT;
     public static int SCREEN = 0;
Index: src/main/java/delta/DeltaCalc.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package delta;\r\n\r\nimport exp.E;\r\nimport exp.ExpStrings;\r\nimport serverObjects.indexObjects.Spx;\r\n\r\nimport java.util.Scanner;\r\n\r\npublic class DeltaCalc {\r\n\r\n    public static void main( String[] args ) {\r\n        Spx client = Spx.getInstance( );\r\n\r\n        E e = ( E ) client.getExps( ).getExp( ExpStrings.e1 );\r\n\r\n        Scanner scanner = new Scanner( System.in );\r\n\r\n        int q = 1;\r\n\r\n        while ( true ) {\r\n            System.out.println( );\r\n            System.out.println( \"Enter last\" );\r\n            double last = scanner.nextDouble( );\r\n            e.setFutForDelta( last );\r\n            e.setFutBidForDelta( last - 0.5 );\r\n            e.setFutAskForDelta( last + 0.5 );\r\n\r\n            e.setVolumeFutForDelta( q );\r\n            q += 1;\r\n        }\r\n    }\r\n\r\n    public static double calc( int quantity, double last, double preBid, double preAsk ) {\r\n\r\n        double moneyPerPips = 50;\r\n\r\n        double delta = 0;\r\n\r\n        // Buy ( Last == pre ask )\r\n        if ( last >= preAsk ) {\r\n            delta = quantity;\r\n        }\r\n\r\n        // Sell ( Last == pre bid )\r\n        if ( last <= preBid ) {\r\n            delta = quantity * -1;\r\n        }\r\n\r\n        delta *= moneyPerPips;\r\n\r\n//        System.out.println( \"Q \" + quantity );\r\n//        System.out.println( \"Last \" + last );\r\n//        System.out.println( \"pre Bid: \" + preBid );\r\n//        System.out.println( \"pre ask: \" + preAsk );\r\n//        System.out.println( \"Delta: \" + delta );\r\n\r\n        return delta;\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/delta/DeltaCalc.java	(revision a56979f66262aed27c422c3be91a188ed14099da)
+++ src/main/java/delta/DeltaCalc.java	(date 1602071639963)
@@ -32,28 +32,26 @@
 
     public static double calc( int quantity, double last, double preBid, double preAsk ) {
 
-        double moneyPerPips = 50;
-
         double delta = 0;
 
-        // Buy ( Last == pre ask )
-        if ( last >= preAsk ) {
-            delta = quantity;
-        }
+        if ( quantity != 0 && last != 0 && preBid != 0 && preAsk != 0 ) {
+
+            // Buy ( Last == pre ask )
+            if ( last >= preAsk ) {
+                delta = quantity;
+            }
 
-        // Sell ( Last == pre bid )
-        if ( last <= preBid ) {
-            delta = quantity * -1;
-        }
+            // Sell ( Last == pre bid )
+            if ( last <= preBid ) {
+                delta = quantity * -1;
+            }
 
-        delta *= moneyPerPips;
-
-//        System.out.println( "Q " + quantity );
-//        System.out.println( "Last " + last );
-//        System.out.println( "pre Bid: " + preBid );
-//        System.out.println( "pre ask: " + preAsk );
-//        System.out.println( "Delta: " + delta );
-
+            System.out.println( "Q " + quantity );
+            System.out.println( "Last " + last );
+            System.out.println( "pre Bid: " + preBid );
+            System.out.println( "pre ask: " + preAsk );
+            System.out.println( "Delta: " + delta );
+        }
         return delta;
     }
 
diff --git .idea/shelf/Uncommitted_changes_before_Update_at_09_06_2020__22_33__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Update_at_09_06_2020__22_33__Default_Changelist_.xml
diff --git .idea/shelf/Uncommitted_changes_before_Update_at_30_09_2020_16_55__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Update_at_30_09_2020_16_55__Default_Changelist_.xml
